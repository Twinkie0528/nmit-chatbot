from flask import Flask, request
import requests
import os
import nltk
from processor import chatbot_response

# üß† NLTK tokenizer —Ç–∞—Ç–∞—Ö
nltk.download('punkt')

app = Flask(__name__)

# üîê –û—Ä—á–Ω—ã —Ö—É–≤—å—Å–∞–≥—á (Render-–¥ —Ç–æ—Ö–∏—Ä—É—É–ª–∞—Ö)
VERIFY_TOKEN = os.getenv("VERIFY_TOKEN", "mini_token")
PAGE_ACCESS_TOKEN = os.getenv("PAGE_ACCESS_TOKEN")

# üß™ –õ–æ–∫–∞–ª —Ç–µ—Å—Ç –æ—Ä—á–∏–Ω–¥ –±–æ–ª —à—É—É–¥ —Ç–æ–∫–µ–Ω ”©–≥–Ω”©
if not PAGE_ACCESS_TOKEN:
    print("‚ö†Ô∏è Render-–∏–π–Ω PAGE_ACCESS_TOKEN –æ–ª–¥—Å–æ–Ω–≥“Ø–π. –õ–æ–∫–∞–ª –æ—Ä—á–∏–Ω–¥ –∞–∂–∏–ª–ª–∞–∂ –±–∞–π–Ω–∞.")
    PAGE_ACCESS_TOKEN = "–¢–ê–ù–´_–¢–ï–°–¢_TOKEN_–≠–ù–î"  # ‚Üê —ç–Ω–¥ –ª–æ–∫–∞–ª —Ç–µ—Å—Ç —Ç–æ–∫–µ–Ω–æ–æ –æ—Ä—É—É–ª–Ω–∞

@app.route('/webhook', methods=['GET', 'POST'])
def webhook():
    if request.method == 'GET':
        # ‚úÖ –í–µ—Ä–∏—Ñ–∏–∫—ç–π—à–Ω token —à–∞–ª–≥–∞—Ö
        token = request.args.get('hub.verify_token')
        challenge = request.args.get('hub.challenge')
        if token == VERIFY_TOKEN:
            print("‚úÖ VERIFY_TOKEN –±–∞—Ç–∞–ª–≥–∞–∞–∂–ª–∞–∞.")
            return challenge
        print("‚ùå VERIFY_TOKEN –±—É—Ä—É—É –±–∞–π–Ω–∞.")
        return 'Invalid verification token', 403

    elif request.method == 'POST':
        data = request.get_json()
        print("üì© Message received:", data)

        for entry in data.get("entry", []):
            for messaging_event in entry.get("messaging", []):
                sender_id = messaging_event["sender"]["id"]
                if "message" in messaging_event:
                    message_text = messaging_event["message"].get("text", "")
                    print(f"üó£Ô∏è User Message: {message_text}")

                    try:
                        bot_reply = chatbot_response(message_text)
                    except Exception as e:
                        print("‚ùå chatbot_response –∞–ª–¥–∞–∞:", str(e))
                        bot_reply = "ü§ñ –£—É—á–ª–∞–∞—Ä–∞–π, —Ö–∞—Ä–∏—É ”©–≥”©—Ö —è–≤—Ü–∞–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞."

                    print(f"ü§ñ Bot Reply: {bot_reply}")
                    send_message(sender_id, bot_reply)

        return 'EVENT_RECEIVED', 200

def send_message(recipient_id, message_text):
    if not PAGE_ACCESS_TOKEN:
        print("‚ùå PAGE_ACCESS_TOKEN –±–∞–π—Ö–≥“Ø–π —Ç—É–ª —Ö–∞—Ä–∏—É –∏–ª–≥—ç—ç—Ö –±–æ–ª–æ–º–∂–≥“Ø–π.")
        return

    url = "https://graph.facebook.com/v18.0/me/messages"
    params = {"access_token": PAGE_ACCESS_TOKEN}
    headers = {"Content-Type": "application/json"}
    data = {
        "recipient": {"id": recipient_id},
        "message": {"text": message_text}
    }

    response = requests.post(url, params=params, headers=headers, json=data)
    print("üì® Sent message:", response.status_code, response.text)

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
